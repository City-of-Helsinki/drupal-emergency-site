<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

declare(strict_types = 1);

use Drupal\views\Views;

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $variables['content']['#attributes']['block_id'] = $variables['elements']['#id'];
  }
  // Overwrite etusivu url.
  if ($variables['elements']['#plugin_id'] == 'system_branding_block') {
    $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $variables['frontpage_instance_url'] =
      \Drupal::request()->getSchemeAndHttpHost() . '/' . $lang;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_subtheme_theme_suggestions_block_alter(&$suggestions) {
  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('hdbt_subtheme_', '', $suggestion);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_subtheme_theme_suggestions_menu_alter(&$suggestions, $variables) {
  if (isset($variables['attributes']['block_id'])) {
    $block_id = str_replace('hdbt_subtheme_', '', $variables['attributes']['block_id']);

    $suggestions[] = match ($block_id) {
      'mobile_navigation' => 'menu__mobile',
      'mainnavigation' => 'menu__main__desktop',
      'main_navigation_level_2' => 'menu__main__sidebar',
      'brandingnavigation' => 'menu__main__branding',
      default => 'menu__' . $variables['attributes']['block_id'],
    };
  }
}

/**
 * Implements template_preprocess_paragraph().
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - paragraph: The paragraph object.
 *   - view_mode: View mode; e.g., 'full', 'teaser'...
 */
function hdbt_subtheme_preprocess_paragraph(&$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];
  // Get the referenced entities.
  /** @var \Drupal\paragraphs\Entity\ParagraphsType[] $referencedEntities */
  $referencedEntities = $paragraph->referencedEntities();
  foreach ($referencedEntities as $paragraph_type) {
    // Add local (crisis) news to the helfi_news template.
    if ($paragraph_type->id() == 'crisis_news_paragraph') {

      $language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
      $environment_url = \Drupal::request()->getSchemeAndHttpHost();
      // Set the news path based on language.
      switch ($language_id) {
        case 'fi':
        default:
          $news_path = '/uutiset';
          break;

        case 'sv':
          $news_path = '/nyheter';
          break;

        case 'en':
          $news_path = '/news';
          break;
      }
      $path = \Drupal::service('path_alias.manager')->getPathByAlias($news_path);
      if (preg_match('/node\/(\d+)/', $path, $matches)) {
        $node_id = $matches[1];
        $values = \Drupal::entityQuery('node')->accessCheck(TRUE)->condition('nid', $node_id)->execute();
      }
      if (!empty($values)) {
        $news_url = $environment_url . '/' . $language_id . $news_path;
        $variables['news_url'] = $news_url;
      }

      // Attach the view to the paragraph.
      $view = Views::getView('crisis_news_view');
      $view->setDisplay('crisis_news');
      $view->execute();
      foreach ($view->result as $result) {
        $variables['content']['news_list'][] = Drupal::entityTypeManager()
          ->getViewBuilder('node')
          ->view($result->_entity, 'medium_teaser');
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_subtheme_theme_suggestions_node_alter(&$suggestions, $variables) {
  $bundle = $variables['elements']['#node']->bundle();
  // Bypass external entity template.
  if ($variables['elements']['#view_mode'] == 'medium_teaser') {
    $suggestions[] = 'node__news_item__medium_teaser__crisis';
  }
  // Same template but without social_media block.
  elseif ($bundle == 'news_item' && $variables['elements']['#view_mode'] == 'full') {
    $suggestions[] = 'node__news_item_crisis_news';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_region(&$variables) {
  if (isset($variables['elements']['hdbt_subtheme_footerbottomnavigation'])) {
    $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $variables['frontpage_instance_url'] =
      \Drupal::request()->getSchemeAndHttpHost() . '/' . $lang;
  }
}
